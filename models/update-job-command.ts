/*
HR API

<a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>

The version of the OpenAPI document: 2
Contact: hrapi@iris.co.uk

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface UpdateJobCommand
 */
export interface UpdateJobCommand {
    /**
     * The title of the Job. <br />  Cascade Source: [EmployeeJobs].[JobTitle]
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'JobTitle'?: string | null;
    /**
     * The classification of the Job e.g. Technical, Professional, Managerial. <br />  Cascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'Classification'?: string | null;
    /**
     * The start date of the Job. <br />  Required. <br />  Cascade Source: [EmployeeJobs].[SYS_EffectiveDate]
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'StartDate'?: string;
    /**
     * The end date of the Job. <br />  Automatically Calculated. <br />  Cascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'EndDate'?: string | null;
    /**
     * The name of the working calendar of the Job. <br />  Cascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'WorkingCalendar'?: string | null;
    /**
     * The ID of the Employee that is the line manager for this Job. <br />  Must exist in Employees Service. <br />  Cascade Source: [EmployeeJobs].[WorksForEmployeeId]
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'LineManagerId'?: string | null;
    /**
     * The ID of the Employee\'s Hierarchy node of the Job. <br />  Must exist in Hierarchy Service.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'HierarchyNodeId'?: string | null;
    /**
     * The Job is currently active. <br />  Automatically Calculated. <br />  Cascade Source: [EmployeeJobs].[sys_ActiveJob]
     * @type {boolean}
     * @memberof UpdateJobCommand
     */
    'Active'?: boolean;
    /**
     * The salary of the Job. <br />  Cascade Source: [EmployeeJobs].[BasicPay]
     * @type {number}
     * @memberof UpdateJobCommand
     */
    'Salary'?: number | null;
    /**
     * The contract of the Job e.g. Full Time, Part Time. <br />  Cascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'Contract'?: string | null;
    /**
     * How often the Job\'s salary will be paid e.g. Monthly, Weekly. <br />  Cascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'PayFrequency'?: string | null;
    /**
     * The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />  Cascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'PayBasis'?: string | null;
    /**
     * The full-time equivalent to a full time employee\'s hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />  Cascade Source: [EmployeeJobs].[FTE].
     * @type {number}
     * @memberof UpdateJobCommand
     */
    'FullTimeEquivalent'?: number | null;
    /**
     * The reason for the change. <br />  Cascade Source: [EmployeeJobs].[Reason].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'ChangeReason'?: string | null;
    /**
     * The next increment date.  <br />  Cascade Source: [EmployeeJobs].[IncrementDate].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'NextIncrementDate'?: string | null;
    /**
     * The timesheet location. <br />  Cascade Source: [EmployeeJobs].[TimesheetLocation].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'TimesheetLocation'?: string | null;
    /**
     * The time set lunch duration. <br />  Cascade Source: [EmployeeJobs].[LunchDuration].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'TimesheetLunchDuration'?: string | null;
    /**
     * The expense submission frequency. <br />  Cascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'ExpenseSubmissionFrequency'?: string | null;
    /**
     * The cost centre. <br />  Cascade Source: [EmployeeJobs].[CostCentre].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'CostCentre'?: string | null;
    /**
     * The job family. <br />  Cascade Source: [EmployeeJobs].[JobFamily].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'JobFamily'?: string | null;
    /**
     * The flag to indicate if the employee is an apprentice under 25. <br />  Cascade Source: [EmployeeJobs].[ApprenticeUnder25].
     * @type {boolean}
     * @memberof UpdateJobCommand
     */
    'ApprenticeUnder25'?: boolean | null;
    /**
     * The end date of the apprenticeship. <br />  Cascade Source: [EmployeeJobs].[ApprenticeshipEndDate].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'ApprenticeshipEndDate'?: string | null;
    /**
     * The end date of the contract. <br />  Cascade Source: [EmployeeJobs].[ContractEndDate].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'ContractEndDate'?: string | null;
    /**
     * Normal hours. <br />  Cascade Source: [EmployeeJobs].[NormalHours].
     * @type {number}
     * @memberof UpdateJobCommand
     */
    'NormalHours'?: number | null;
    /**
     * The real time information of irregular frequency. <br />  Cascade Source: [EmployeeJobs].[RTIIrregularFrequency].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'RealTimeInformationIrregularFrequency'?: string | null;
    /**
     * The notice period. <br />  Cascade Source: [EmployeeJobs].[NoticePeriod].
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'NoticePeriod'?: string | null;
    /**
     * The ID of the Job to update. <br />  Must exist in the Jobs Service.
     * @type {string}
     * @memberof UpdateJobCommand
     */
    'Id'?: string | null;
}

